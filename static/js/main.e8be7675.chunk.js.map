{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addGood","good","setState","prevState","removeGood","filter","item","createMessage","goods","length","join","slice","clearGoods","this","className","type","onClick","map","buttonText","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GAAD,MACZ,CAAEJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,S,EAIhDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAcI,EAAUJ,aAAaM,QAAO,SAACC,GAAD,OAAUA,IAASL,U,EAInEM,cAAgB,SAACC,GACf,IAAQC,EAAWD,EAAXC,OAER,OAAQA,GACN,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAME,KAAK,SAArB,iBACF,QACE,MAAM,GAAN,OAAUF,EAAMG,MAAM,GAAI,GAAGD,KAAK,MAAlC,gBAA+CF,EAAMC,EAAS,GAA9D,mB,EAING,WAAa,kBACX,EAAKV,SAAS,CAAEH,aAAc,M,4CAGhC,WAAU,IAAD,OACCA,EAAiBc,KAAKf,MAAtBC,aAER,OACE,sBAAKe,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,+BACGD,KAAKN,cAAcM,KAAKf,MAAMC,cAC9B,MAED,wBACEgB,KAAK,SACLC,QAASH,KAAKD,WAFhB,wBASJ,6BACGhB,EAAgBqB,KAAI,SAAChB,GACpB,IAAMiB,EAAanB,EAAaoB,SAASlB,GACrC,SACA,SAQJ,OACE,sBAAKa,UAAU,kBAAf,UACE,6BAAgBb,GAAPA,GACT,wBACEc,KAAK,SACLC,QAXc,kBAClBjB,EAAaoB,SAASlB,GAClB,EAAKG,WAAWH,GAChB,EAAKD,QAAQC,IAMf,SAIGiB,mB,GA1EDE,IAAMC,WAqFTxB,ICtGfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e8be7675.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState((prevState) => (\n      { selectedGood: [...prevState.selectedGood, good] }\n    ));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGood: prevState.selectedGood.filter((item) => item !== good),\n    }));\n  };\n\n  createMessage = (goods: string[]) => {\n    const { length } = goods;\n\n    switch (length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${goods[0]} is selected`;\n      case 2:\n        return `${goods.join(' and ')} are selected`;\n      default:\n        return `${goods.slice(0, -1).join(', ')} and ${goods[length - 1]} are selected`;\n    }\n  };\n\n  clearGoods = () => (\n    this.setState({ selectedGood: [] })\n  );\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"list-item\">\n          <h1>\n            {this.createMessage(this.state.selectedGood)}\n            {'   '}\n\n            <button\n              type=\"button\"\n              onClick={this.clearGoods}\n            >\n              Clear\n            </button>\n          </h1>\n        </div>\n\n        <ul>\n          {goodsFromServer.map((good) => {\n            const buttonText = selectedGood.includes(good)\n              ? 'Remove'\n              : 'Select';\n\n            const handleClick = () => (\n              selectedGood.includes(good)\n                ? this.removeGood(good)\n                : this.addGood(good)\n            );\n\n            return (\n              <div className=\"goods-container\">\n                <li key={good}>{good}</li>\n                <button\n                  type=\"button\"\n                  onClick={handleClick}\n                >\n                  {buttonText}\n                </button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}